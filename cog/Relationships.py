import discord
from discord.ext import commands
import json
import os
import random
import ast  # –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ rel_key
from typing import Dict, List
from Relationship_System import RelationshipSystem


class RelationshipCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.system = RelationshipSystem()
        self.relationship_descriptions = {
            1: "üî¥ –í—Ä–∞–∂–¥–∞",
            2: "üî¥ –ö–æ–Ω—Ñ–ª–∏–∫—Ç",
            3: "üü° –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ",
            4: "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ",
            5: "üü¢ –î—Ä—É–∂–µ–ª—é–±–∏–µ",
            6: "üü¢ –°–∏–º–ø–∞—Ç–∏—è",
            7: "üîµ –î—Ä—É–∂–±–∞",
            8: "üîµ –ë–ª–∏–∑–æ—Å—Ç—å",
            9: "üíñ –õ—é–±–æ–≤—å",
            10: "üíñ –î—É—à–∞",
        }

    @commands.command(name="–¥–æ–±–∞–≤–∏—Ç—å")
    async def add_character(self, ctx, *, name: str):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        name = name.strip()  # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        if not name:
            await ctx.send("‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        if name in self.system.characters:
            await ctx.send(f"‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return

        self.system.characters[name] = {
            "added_by": ctx.author.id,
            "added_date": ctx.message.created_at.isoformat(),
        }
        self.system.save_data()

        embed = discord.Embed(
            title="‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–±–∞–≤–ª–µ–Ω",
            description=f"–ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!",
            color=0x00FF00,
        )
        await ctx.send(embed=embed)

    @commands.command(name="—É–¥–∞–ª–∏—Ç—å")
    async def remove_character(self, ctx, *, name: str):
        """–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        name = name.strip()
        if not name:
            await ctx.send("‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        if name not in self.system.characters:
            await ctx.send(f"‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        del self.system.characters[name]
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å —ç—Ç–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º (–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –∫–ª—é—á–µ–π)
        to_remove = []
        for rel_key in self.system.relationships:
            try:
                chars = ast.literal_eval(rel_key)
                if name in chars:
                    to_remove.append(rel_key)
            except (ValueError, SyntaxError):
                # –ï—Å–ª–∏ –∫–ª—é—á –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                continue
        for rel_key in to_remove:
            del self.system.relationships[rel_key]

        self.system.save_data()
        await ctx.send(f"‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` –∏ –≤—Å–µ –µ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã!")

    @commands.command(name="–ø–µ—Ä—Å–æ–Ω–∞–∂–∏")
    async def list_characters(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"""
        if not self.system.characters:
            await ctx.send("‚ùå –ü–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π!")
            return

        characters = list(self.system.characters.keys())
        embed = discord.Embed(
            title="üë• –°–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
            description=f"–í—Å–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {len(characters)}\n\n"
            + "\n".join([f"‚Ä¢ {char}" for char in sorted(characters)]),
            color=0x9370DB,
        )
        await ctx.send(embed=embed)

    @commands.command(name="–±—Ä–æ—Å–æ–∫")
    async def roll_relationships(self, ctx):
        """–ë—Ä–æ—Å–∏—Ç—å –∫—É–±—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π"""
        if len(self.system.characters) < 2:
            await ctx.send("‚ùå –ù—É–∂–Ω–æ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
            return

        characters = list(self.system.characters.keys())
        relationships_created = 0

        for i, char1 in enumerate(characters):
            for j, char2 in enumerate(characters):
                if i >= j:  # –ß—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è
                    continue

                rel_key = str(tuple(sorted([char1, char2])))

                if rel_key not in self.system.relationships:
                    roll = random.randint(1, 10)

                    self.system.relationships[rel_key] = {
                        "value": roll,
                        "description": self.relationship_descriptions[roll],
                        "rolled_by": ctx.author.id,
                        "roll_date": ctx.message.created_at.isoformat(),
                    }
                    relationships_created += 1

        self.system.save_data()

        embed = discord.Embed(
            title="üé≤ –û—Ç–Ω–æ—à–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã!",
            description=f"–°–æ–∑–¥–∞–Ω–æ {relationships_created} –Ω–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.",
            color=0x0099FF,
        )
        await ctx.send(embed=embed)

    @commands.command(name="—Ç–∞–±–ª–∏—Ü–∞")
    async def show_relationship_table(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç–Ω–æ—à–µ–Ω–∏–π"""
        if not self.system.relationships:
            await ctx.send("‚ùå –û—Ç–Ω–æ—à–µ–Ω–∏—è –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `!–±—Ä–æ—Å–æ–∫`")
            return

        characters = sorted(self.system.characters.keys())

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É (–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ –º–æ–≥—É—Ç –æ–±—Ä–µ–∑–∞—Ç—å—Å—è)
        table = "```\n"
        table += " " * 15
        for char in characters:
            table += f"{char[:8]:>8} "
        table += "\n" + "-" * (15 + 9 * len(characters)) + "\n"

        for char1 in characters:
            table += f"{char1[:14]:<14} "
            for char2 in characters:
                if char1 == char2:
                    table += "    ‚Äî    "
                else:
                    rel_key = str(tuple(sorted([char1, char2])))
                    if rel_key in self.system.relationships:
                        rel = self.system.relationships[rel_key]
                        table += f"    {rel['value']}    "
                    else:
                        table += "    ?    "
            table += "\n"
        table += "```"

        embed = discord.Embed(
            title="üìä –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π", description=table, color=0xFFD700
        )

        # –õ–µ–≥–µ–Ω–¥–∞
        legend = ""
        for value, desc in self.relationship_descriptions.items():
            legend += f"{value}: {desc}\n"

        embed.add_field(name="üéØ –õ–µ–≥–µ–Ω–¥–∞", value=legend, inline=False)
        await ctx.send(embed=embed)

    @commands.command(name="–æ—Ç–Ω–æ—à–µ–Ω–∏—è")
    async def show_detailed_relationships(self, ctx, *, character_name: str = None):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"""
        if not self.system.relationships:
            await ctx.send("‚ùå –û—Ç–Ω–æ—à–µ–Ω–∏—è –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã!")
            return

        embed = discord.Embed(title="üíû –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", color=0xFF69B4)

        if character_name:
            character_name = character_name.strip()
            if character_name not in self.system.characters:
                await ctx.send(f"‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ `{character_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return

            # –û—Ç–Ω–æ—à–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            relationships = []
            for rel_key, rel_data in self.system.relationships.items():
                try:
                    chars = ast.literal_eval(rel_key)
                    if character_name in chars:
                        other_char = (
                            chars[0] if chars[1] == character_name else chars[1]
                        )
                        relationships.append((other_char, rel_data))
                except (ValueError, SyntaxError):
                    # –ï—Å–ª–∏ –∫–ª—é—á –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                    continue

            if not relationships:
                embed.description = f"–£ {character_name} –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏–π."
            else:
                desc = ""
                for other_char, rel_data in sorted(
                    relationships, key=lambda x: x[1]["value"], reverse=True
                ):
                    desc += f"**{other_char}**: {rel_data['value']} - {rel_data['description']}\n"
                embed.description = f"–û—Ç–Ω–æ—à–µ–Ω–∏—è **{character_name}**:\n\n{desc}"
        else:
            # –í—Å–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
            desc = ""
