import discord
from discord.ext import commands
import random


class RelationshipCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.system = RelationshipSystem()
        self.relationship_descriptions = {
            1: "üî¥ –í—Ä–∞–∂–¥–∞",
            2: "üî¥ –ö–æ–Ω—Ñ–ª–∏–∫—Ç",
            3: "üü° –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ",
            4: "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ",
            5: "üü¢ –î—Ä—É–∂–µ–ª—é–±–∏–µ",
            6: "üü¢ –°–∏–º–ø–∞—Ç–∏—è",
            7: "üîµ –î—Ä—É–∂–±–∞",
            8: "üîµ –ë–ª–∏–∑–æ—Å—Ç—å",
            9: "üíñ –õ—é–±–æ–≤—å",
            10: "üíñ –î—É—à–∞",
        }

    @commands.command(name="–¥–æ–±–∞–≤–∏—Ç—å")
    async def add_character(self, ctx, *, name: str):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        if name in self.system.characters:
            await ctx.send(f"–ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return

        self.system.characters[name] = {
            "added_by": ctx.author.id,
            "added_date": str(ctx.message.created_at),
        }
        self.system.save_data()

        embed = discord.Embed(
            title="‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–±–∞–≤–ª–µ–Ω",
            description=f"–ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É!",
            color=0x00FF00,
        )
        await ctx.send(embed=embed)

    @commands.command(name="—É–¥–∞–ª–∏—Ç—å")
    async def remove_character(self, ctx, *, name: str):
        """–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        if name not in self.system.characters:
            await ctx.send(f"–ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        del self.system.characters[name]
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å —ç—Ç–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º
        for rel_key in list(self.system.relationships.keys()):
            if name in rel_key:
                del self.system.relationships[rel_key]

        self.system.save_data()
        await ctx.send(f"–ü–µ—Ä—Å–æ–Ω–∞–∂ `{name}` –∏ –≤—Å–µ –µ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã!")

    @commands.command(name="–±—Ä–æ—Å–æ–∫")
    async def roll_relationships(self, ctx):
        """–ë—Ä–æ—Å–∏—Ç—å –∫—É–±—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π"""
        if len(self.system.characters) < 2:
            await ctx.send("–ù—É–∂–Ω–æ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π!")
            return

        characters = list(self.system.characters.keys())
        relationships_created = 0

        for i, char1 in enumerate(characters):
            for j, char2 in enumerate(characters):
                if i >= j:  # –ß—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è A-B –∏ B-A
                    continue

                # –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã A-B –∏ B-A –±—ã–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏)
                rel_key = tuple(sorted([char1, char2]))

                if str(rel_key) not in self.system.relationships:
                    # –ë—Ä–æ—Å–∞–µ–º d10 –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏—è
                    roll = random.randint(1, 10)

                    self.system.relationships[str(rel_key)] = {
                        "value": roll,
                        "description": self.relationship_descriptions[roll],
                        "rolled_by": ctx.author.id,
                        "roll_date": str(ctx.message.created_at),
                    }
                    relationships_created += 1

        self.system.save_data()

        embed = discord.Embed(
            title="üé≤ –û—Ç–Ω–æ—à–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã!",
            description=f"–°–æ–∑–¥–∞–Ω–æ {relationships_created} –Ω–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π –º–µ–∂–¥—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏.",
            color=0x0099FF,
        )
        await ctx.send(embed=embed)

    @commands.command(name="—Ç–∞–±–ª–∏—Ü–∞")
    async def show_relationship_table(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –æ—Ç–Ω–æ—à–µ–Ω–∏–π"""
        if not self.system.relationships:
            await ctx.send("–û—Ç–Ω–æ—à–µ–Ω–∏—è –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `!–±—Ä–æ—Å–æ–∫`")
            return

        characters = sorted(self.system.characters.keys())
        if len(characters) == 0:
            await ctx.send("–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π!")
            return

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        table = "```\n"
        table += " " * 15
        for char in characters:
            table += f"{char[:8]:>8} "  # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
        table += "\n" + "-" * (15 + 9 * len(characters)) + "\n"

        for char1 in characters:
            table += f"{char1[:14]:<14} "
            for char2 in characters:
                if char1 == char2:
                    table += "    ‚Äî    "
                else:
                    rel_key = str(tuple(sorted([char1, char2])))
                    if rel_key in self.system.relationships:
                        rel = self.system.relationships[rel_key]
                        table += f"    {rel['value']}    "
                    else:
                        table += "    ?    "
            table += "\n"
        table += "```"

        embed = discord.Embed(
            title="üìä –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π", description=table, color=0xFFD700
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–≥–µ–Ω–¥—É
        legend = ""
        for value, desc in self.relationship_descriptions.items():
            legend += f"{value}: {desc}\n"

        embed.add_field(name="üéØ –õ–µ–≥–µ–Ω–¥–∞", value=legend, inline=False)
        await ctx.send(embed=embed)

    @commands.command(name="–æ—Ç–Ω–æ—à–µ–Ω–∏—è")
    async def show_detailed_relationships(self, ctx, *, character_name: str = None):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        if character_name and character_name not in self.system.characters:
            await ctx.send(f"–ü–µ—Ä—Å–æ–Ω–∞–∂ `{character_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        if not self.system.relationships:
            await ctx.send("–û—Ç–Ω–æ—à–µ–Ω–∏—è –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã!")
            return

        embed = discord.Embed(title="üíû –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", color=0xFF69B4)

        if character_name:
            # –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            relationships = []
            for rel_key, rel_data in self.system.relationships.items():
                chars = eval(rel_key)  # –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ç.–∫. –Ω–∞—à–∏ –∫–ª—é—á–∏ - –∫–æ—Ä—Ç–µ–∂–∏
                if character_name in chars:
                    other_char = chars[0] if chars[1] == character_name else chars[1]
                    relationships.append((other_char, rel_data))

            if not relationships:
                embed.description = (
                    f"–£ {character_name} –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π."
                )
            else:
                desc = ""
                for other_char, rel_data in sorted(
                    relationships, key=lambda x: x[1]["value"], reverse=True
                ):
                    desc += f"**{other_char}**: {rel_data['value']} - {rel_data['description']}\n"
                embed.description = f"–û—Ç–Ω–æ—à–µ–Ω–∏—è **{character_name}**:\n\n{desc}"
        else:
            # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
            desc = ""
            for rel_key, rel_data in sorted(
                self.system.relationships.items(),
                key=lambda x: x[1]["value"],
                reverse=True,
            ):
                chars = eval(rel_key)
                desc += f"**{chars[0]}** ‚ù§ **{chars[1]}**: {rel_data['value']} - {rel_data['description']}\n"

            embed.description = desc

        await ctx.send(embed=embed)

    @commands.command(name="–ø–µ—Ä—Å–æ–Ω–∞–∂–∏")
    async def list_characters(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"""
        if not self.system.characters:
            await ctx.send("–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π!")
            return

        characters = list(self.system.characters.keys())
        embed = discord.Embed(
            title="üë• –°–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
            description=f"–í—Å–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {len(characters)}\n\n"
            + "\n".join([f"‚Ä¢ {char}" for char in sorted(characters)]),
            color=0x9370DB,
        )
        await ctx.send(embed=embed)

    @commands.command(name="–ø–µ—Ä–µ–±—Ä–æ—Å–∏—Ç—å")
    async def reroll_relationship(self, ctx, char1: str, char2: str):
        """–ü–µ—Ä–µ–±—Ä–æ—Å–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏"""
        rel_key = str(tuple(sorted([char1, char2])))

        if rel_key not in self.system.relationships:
            await ctx.send(f"–û—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É `{char1}` –∏ `{char2}` –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return

        # –ù–æ–≤—ã–π –±—Ä–æ—Å–æ–∫
        new_roll = random.randint(1, 10)
        old_roll = self.system.relationships[rel_key]["value"]

        self.system.relationships[rel_key].update(
            {
                "value": new_roll,
                "description": self.relationship_descriptions[new_roll],
                "rerolled_by": ctx.author.id,
                "reroll_date": str(ctx.message.created_at),
            }
        )
        self.system.save_data()

        embed = discord.Embed(
            title="üé≤ –û—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–µ—Ä–µ–±—Ä–æ—à–µ–Ω–æ!",
            description=f"**{char1}** ‚ù§ **{char2}**\n–°—Ç–∞—Ä–æ–µ: {old_roll} ‚Üí –ù–æ–≤–æ–µ: {new_roll}\n{self.relationship_descriptions[new_roll]}",
            color=0xFFA500,
        )
        await ctx.send(embed=embed)


async def setup(bot):
    await bot.add_cog(RelationshipCog(bot))
